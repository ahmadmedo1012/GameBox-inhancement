(function(){
const orderForm = document.querySelector('#orderForm');
if(orderForm){
function syncPkg(){
const sel = document.querySelector('input[name="pkg"]:checked');
const hidden = orderForm.querySelector('input[name="package"]') || orderForm.querySelector('input[name="package_id"]');
if (sel && hidden) hidden.value = sel.value;
}
document.addEventListener('change', (e)=>{
if(e.target && e.target.matches('input[name="pkg"]')) syncPkg();
});
syncPkg();
orderForm.addEventListener('submit', (e)=>{
if(!orderForm.checkValidity()){
e.preventDefault();
orderForm.reportValidity();
if(window.showToast) showToast('يرجى تعبئة الحقول المطلوبة');
return;
}
if(orderForm.hasAttribute('data-preview')){
e.preventDefault();
const fd = new FormData(orderForm);
const data = Object.fromEntries(fd.entries());
const receipt = document.getElementById('receipt');
if (receipt){
receipt.innerHTML = `
<div class="form mt-3">
<h3>تم استلام طلبك ✅</h3>
<p class="note">سنقوم بمراجعة الطلب وتنفيذه في أقرب وقت.</p>
<hr style="opacity:.2;margin:12px 0">
<div style="display:grid;grid-template-columns:1fr 1fr;gap:10px">
${data.service ? `<div><strong>الخدمة:</strong> ${data.service}</div>`:''}
${(data.package||data.package_id) ? `<div><strong>الباقة:</strong> ${(data.package||data.package_id)}</div>`:''}
${data.player_id ? `<div><strong>معرّف اللاعب:</strong> ${data.player_id}</div>`:''}
${data.server ? `<div><strong>السيرفر/المنطقة:</strong> ${data.server}</div>`:''}
${data.network ? `<div><strong>الشبكة:</strong> ${data.network}</div>`:''}
${data.sender_phone ? `<div><strong>رقم المُرسل:</strong> ${data.sender_phone}</div>`:''}
${data.amount_sent ? `<div><strong>المبلغ المُرسل:</strong> ${data.amount_sent} د.ل</div>`:''}
${data.note ? `<div style="grid-column:1 / -1"><strong>ملاحظة:</strong> ${data.note}</div>`:''}
</div>
</div>`;
receipt.classList.remove('hidden');
}
if(window.showToast) showToast('تم إنشاء ملخص الطلب');
return;
}
});
}
document.addEventListener('click', function(e){
const btn = e.target.closest('.fav-btn');
if(!btn || !btn.dataset.service) return;
fetch('ajax/fav_toggle.php', {
method:'POST',
headers:{'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8','X-Requested-With':'XMLHttpRequest'},
body:new URLSearchParams({service_id:btn.dataset.service})
})
.then(r=>r.json())
.then(d=>{
if(d && d.ok){
btn.classList.toggle('active', d.state==='added');
if(window.showToast) showToast(d.state==='added'?'أضيفت إلى المفضلة ♥':'أزيلت من المفضلة');
}else if(d && d.error==='login_required'){
location.href='login.php?next='+encodeURIComponent(location.href);
}
})
.catch(()=>{});
}, {passive:false});
document.addEventListener('DOMContentLoaded', function(){
const buyBtn=document.getElementById('buyNow'),
sheet=document.getElementById('buySheet'),
backdrop=document.getElementById('sheetBackdrop'),
sheetClose=document.getElementById('sheetClose'),
sheetPkg=document.getElementById('sheetPkg'),
sheetPrice=document.getElementById('sheetPrice'),
sheetConfirm=document.getElementById('sheetConfirm'),
slug=(new URLSearchParams(location.search)).get('slug')||'';
function open(){ if(!sheet) return; sheet.classList.add('open'); if(backdrop) backdrop.classList.add('show'); document.body.style.overflow='hidden'}
function close(){ if(!sheet) return; sheet.classList.remove('open'); if(backdrop) backdrop.classList.remove('show'); document.body.style.overflow=''}
if(buyBtn && sheet){
buyBtn.addEventListener('click', function(){
const sel=document.querySelector('input[name="pkg"]:checked');
if(!sel){ if(window.showToast) showToast('اختر الباقة أولاً'); return; }
const label=sel.closest('.card')?.querySelector('.title')?.textContent.trim()||'',
price=sel.dataset.price||'';
if(sheetPkg) sheetPkg.textContent=label;
if(sheetPrice) sheetPrice.textContent=price+' '+(window.CURRENCY||'');
if(sheetConfirm) sheetConfirm.href='order.php?slug='+encodeURIComponent(slug)+'&pid='+encodeURIComponent(sel.value);
open();
});
[sheetClose,backdrop].forEach(el=> el && el.addEventListener('click', close));
document.addEventListener('keydown', e=>{ if(e.key==='Escape') close(); });
}
});
})();
(function(){
const meta = document.getElementById('orderMeta');
const form = document.getElementById('orderForm');
if(!meta || !form) return;
const cat = meta.dataset.category || 'game';
const needsId = meta.dataset.requiresId === '1';
const needsAcc = meta.dataset.requiresAccount === '1';
const wrapPlayer = document.getElementById('wrap_player_id');
const playerInput = form.querySelector('input[name="player_id"]');
const wrapServer = document.getElementById('wrap_server');
const wrapMethod = document.getElementById('wrap_method');
const methodRadios = form.querySelectorAll('input[name="fulfill_method"]');
const wrapWhats = document.getElementById('wrap_whatsapp');
const inWhats = form.querySelector('input[name="whatsapp"]');
const wrapAcc = document.getElementById('wrap_account');
const inEmail = form.querySelector('input[name="account_email"]');
const inPass = form.querySelector('input[name="account_password"]');
function show(el, on){ if(!el) return; el.hidden = !on; if(!on){ el.querySelectorAll('input,select,textarea').forEach(i=>i.required=false);} }
function req(i, on){ if(!i) return; i.required = !!on; }
function apply(){
const isGame = cat === 'game';
const isSub = cat === 'subscription';
const isApp = cat === 'app';
const idMode = needsId || isGame;
show(wrapPlayer, idMode);
show(wrapServer, idMode);
req(playerInput, idMode);
const accMode = needsAcc || isSub;
show(wrapMethod, accMode);
if(!accMode){
show(wrapWhats, false); show(wrapAcc, false);
req(inWhats,false); req(inEmail,false); req(inPass,false);
return;
}
let method = 'whatsapp';
methodRadios.forEach(r=>{ if(r.checked) method=r.value; });
if(method === 'whatsapp'){
show(wrapWhats, true); req(inWhats,true);
show(wrapAcc, false); req(inEmail,false); req(inPass,false);
}else{
show(wrapWhats, false); req(inWhats,false);
show(wrapAcc, true); req(inEmail,true); req(inPass,true);
}
}
methodRadios.forEach(r => r && r.addEventListener('change', apply));
apply();
})();
;
if(!window.__gb_order_init_v9){ window.__gb_order_init_v9=true; (function(){
const form=document.getElementById('orderForm'), meta=document.getElementById('orderMeta');
if(!form || !meta) return;
const $=(s,sc)=> (sc||document).querySelector(s);
function show(el,on){ if(!el) return; el.hidden=!on; if(!on) el.querySelectorAll('input,select,textarea').forEach(i=> i.required=false); }
function req(i,on){ if(i) i.required=!!on; }
function method(){ const r=form.querySelectorAll('input[name="fulfill_method"]'); let v='whatsapp'; r.forEach(x=>{ if(x.checked) v=x.value; }); return v; }
function syncPkg(){ const sel=document.querySelector('input[name="pkg"]:checked'); const hid=form.querySelector('input[name="package_id"]')||form.querySelector('input[name="package"]'); if(sel&&hid) hid.value=sel.value; }
const cat=meta.dataset.category||'game', needsId=meta.dataset.requiresId==='1', needsAcc=meta.dataset.requiresAccount==='1';
const wPlayer=document.getElementById('wrap_player_id'), inPlayer=$('input[name="player_id"]', form);
const wServer=document.getElementById('wrap_server'), inServer=$('input[name="server"]', form);
const wMethod=document.getElementById('wrap_method');
const wWhats=document.getElementById('wrap_whatsapp'), inWhats=$('input[name="whatsapp"]', form);
const wAcc=document.getElementById('wrap_account'), inEmail=$('input[name="account_email"]', form), inPass=$('input[name="account_password"]', form);
function apply(){
const isGame=(cat==='game'), isSub=(cat==='subscription');
const idMode=isGame || needsId, accMode=isSub || needsAcc;
show(wPlayer, idMode); req(inPlayer,idMode);
show(wServer, idMode && !!inServer);
show(wMethod, accMode);
if(accMode){
if(method()==='account'){ show(wWhats,false); req(inWhats,false); show(wAcc,true); req(inEmail,true); req(inPass,true); }
else { show(wWhats,true); req(inWhats,true); show(wAcc,false); req(inEmail,false); req(inPass,false); }
}else{ show(wWhats,false); req(inWhats,false); show(wAcc,false); req(inEmail,false); req(inPass,false); }
}
document.addEventListener('change', e=>{ if(e.target && e.target.name==='pkg') syncPkg(); if(e.target && e.target.name==='fulfill_method') apply(); });
document.addEventListener('DOMContentLoaded', ()=>{ apply(); syncPkg(); });
form.addEventListener('submit', e=>{
apply();
const hasPkg=!!document.querySelector('input[name="pkg"]');
if(hasPkg && !document.querySelector('input[name="pkg"]:checked')){ e.preventDefault(); (window.showToast?showToast('اختر الباقة أولاً'):alert('اختر الباقة أولاً')); return; }
if(!form.checkValidity()){ e.preventDefault(); form.reportValidity(); (window.showToast?showToast('يرجى تعبئة الحقول المطلوبة'):0); return; }
syncPkg();
});
})(); }
;
if(!window.__gb_order_v10){ window.__gb_order_v10=true; (function(){
const form=document.getElementById('orderForm'), meta=document.getElementById('orderMeta');
if(!form || !meta) return;
function applyNow(){
try{
const ev=new Event('change', {bubbles:true});
const m=form.querySelector('input[name="fulfill_method"]:checked'); if(m) m.dispatchEvent(ev);
const p=document.querySelector('input[name="pkg"]:checked'); if(p) p.dispatchEvent(ev);
}catch(e){}
}
document.addEventListener('input', (e)=>{
if(e.target && (e.target.name==='fulfill_method' || e.target.name==='pkg')) applyNow();
}, {passive:true});
document.addEventListener('DOMContentLoaded', applyNow);
})(); }
(function(){
if (window.__gb_mobile_enh) return; window.__gb_mobile_enh = true;
const lazyImgs = [].slice.call(document.querySelectorAll('img.lazy[data-src]'));
if ('IntersectionObserver' in window && lazyImgs.length){
const io = new IntersectionObserver((entries, obs)=>{
entries.forEach(e=>{
if(!e.isIntersecting) return;
const img = e.target;
img.src = img.dataset.src;
img.removeAttribute('data-src');
img.classList.remove('lazy');
obs.unobserve(img);
});
}, {rootMargin: '200px 0px'});
lazyImgs.forEach(img=> io.observe(img));
} else {
lazyImgs.forEach(img=> { img.src = img.dataset.src; img.classList.remove('lazy'); });
}
function enableDragScroll(rail){
let isDown=false, startX=0, scrollL=0, lockAxis=null, lastX=0, vx=0, raf=null;
const onDown = (e)=>{
isDown=true; lockAxis=null;
const x = (e.touches? e.touches[0].clientX : e.clientX);
startX = x; lastX = x; scrollL = rail.scrollLeft;
vx = 0;
rail.classList.add('dragging');
};
const onMove = (e)=>{
if(!isDown) return;
const x = (e.touches? e.touches[0].clientX : e.clientX);
const dx = x - startX;
const dy = (e.touches? e.touches[0].clientY : e.clientY) - (e.touches? e.touches[0].clientY : e.clientY);
if(lockAxis === null){
if(Math.abs(dx) > 6){ lockAxis = 'x'; }
}
if(lockAxis === 'x'){
e.preventDefault();
rail.scrollLeft = scrollL - dx;
vx = x - lastX; lastX = x;
}
};
const onUp = ()=>{
if(!isDown) return; isDown=false; rail.classList.remove('dragging');
const decay = ()=>{ rail.scrollLeft -= vx; vx *= 0.92; if (Math.abs(vx) > 0.5){ raf = requestAnimationFrame(decay); } };
cancelAnimationFrame(raf); if(Math.abs(vx) > 1) decay();
};
rail.addEventListener('mousedown', onDown, {passive:false});
rail.addEventListener('mousemove', onMove, {passive:false});
rail.addEventListener('mouseup', onUp, {passive:true});
rail.addEventListener('mouseleave', onUp, {passive:true});
rail.addEventListener('touchstart', onDown, {passive:false});
rail.addEventListener('touchmove', onMove, {passive:false});
rail.addEventListener('touchend', onUp, {passive:true});
rail.addEventListener('touchcancel', onUp, {passive:true});
}
document.querySelectorAll('.cards-rail').forEach(enableDragScroll);
const path = (location.pathname || '').toLowerCase();
document.querySelectorAll('.smart-tabbar .tab-item').forEach(a=>{
const href = (a.getAttribute('href')||'').toLowerCase();
if(href && path.indexOf(href) !== -1){ a.classList.add('is-active'); }
});
})();